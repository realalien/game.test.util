

# TODO: try to use less p4 interactions with server. 

from P4 import P4, P4Exception, Spec

p4 = P4()
p4.port = "spicydata:1666"
p4.user="Admin"
p4.connect()
p4.exception_level = 1 # ignore "File(s) up-to-date"
# ========================= verifying step ===============================

# ---------  small checking facilities  -- 


def clean_status_of_artifacts(files):
    """
       Scenario:
       * When the binaries generated by nightly build have been checked out(maybe 
         unintentionally), the  ver_def.py will report "File Not Found" error even
         on file system there is one.
       Reason:
         NA
       Solution:
         make sure that all the nightly build artifacts are not in p4 check out  
         mode, so that there won't be any conflict to resolve. 
    
    @param files: an array of file depot path
    """
    for file in files:
        if not client_has_file(file) or file_is_in_edit(file):
            return False
    return True


def client_has_file(file_path_in_depot):
    file_spec=fstat(file_path_in_depot)
    
    if file_spec != None and file_spec.has_key("clientFile"):
        return True
    else:
        return False

def file_is_in_edit(file_path_in_depot):
    file_spec=fstat(file_path_in_depot)
    if file_spec != None and file_spec.has_key("otherAction0") \
                    and file_spec.get("otherAction0") == "edit":
        return True
    else:
        return False

def fstat(file_path_in_depot):
    result = p4.run(["fstat",file_path_in_depot])
    # print result
    if result != None and len(result) > 0: 
        file_spec = Spec.copy(result[0])
        return file_spec
    else: 
        return None


file_path_in_depot = "//depot/Alice2_Prog/Tools/README1"
nightly_build_artifacts = [
        'Binaries/AliceGame-PS3Release.elf',
        'Binaries/Win32/AliceGame.exe',
        'Binaries/Win32/AliceGame.exp',
        'Binaries/Win32/AliceGame.lib',
        'Binaries/Win32/AliceGame.pdb',
        'AliceGame-XeRelease.xex',
        'AliceGame/Script/AliceGame.u',
        'AliceGame/Script/Editor.u',
        'AliceGame/Script/Engine.u',
        'AliceGame/Script/GameFramework.u',
        'AliceGame/Script/GFxUI.u',
        'AliceGame/Script/GFxUIEditor.u',
        'AliceGame/Script/IpDrv.u',
        'AliceGame/Script/Kynapse.u',
        'AliceGame/Script/KynapseEditor.u',
        'AliceGame/Script/OnlineSubsystemGameSpy.u',
        'AliceGame/Script/OnlineSubsystemLive.u',
        'AliceGame/Script/UnrealEd.u',
        'AliceGame/Script/UnrealScriptTest.u',
        'AliceGame/Content/RefShaderCache-PC-D3D-SM3.upk',
        'AliceGame/Content/RefShaderCache-PC-D3D-SM4.upk',
        'Tools/night.build.log/logs/total_builds_timestamps.log', # the file keep the last build time                       
                           
                           ]

print clean_status_of_artifacts([file_path_in_depot])


#---------- schedule for periodic health check

  
#---------- 



#----------  basic gui for QA testers.


# ========================= total steps ===============================


# ---------  trial of status pattern for auto redo the test
# design:
#  env preparation status --->   compiling status   --->    verifying status
